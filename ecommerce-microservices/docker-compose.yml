version: "3"

services:
  # Replace Zipkin with Kafka and Zookeeper
  # zookeeper:
  #   image: bitnami/zookeeper:latest
  #   container_name: zookeeper
  #   environment:
  #     - ZOO_PORT_NUMBER=2181
  #     - ZOO_TICK_TIME=2000
  #     - ALLOW_ANONYMOUS_LOGIN=yes

  #   ports:
  #     - "2181:2181"

  # kafka:
  #   image: bitnami/kafka:latest
  #   container_name: kafka
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - "9092:9092"
  #     - "29092:29092"
  #   environment:
  #     - KAFKA_CFG_NODE_ID=0
  #     - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092,CONTROLLER://:9093
  #     - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
  #     - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
  #     - KAFKA_CFG_PROCESS_ROLES=broker,controller
  #     - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
  #     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  #     - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  # Update checkout service to use NATS
  checkout:
    build:
      context: .
      dockerfile: checkout/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - nats
    environment:
      - ORDER_URL=http://order:8081
      - NATS_URL=nats://nats:4222
      - OTEL_EXPORTER_OTLP_ENDPOINT=nats://nats:4222
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_SERVICE_NAME=checkout-service
    command:
      [
        "./checkout-service",
        "-http.addr=:8080",
        "-order.url=http://order:8081",
        "-nats.url=nats://nats:4222",
      ]

  # Update order service to use NATS
  order:
    build:
      context: .
      dockerfile: order/Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - nats
    environment:
      - PAYMENT_URL=http://payment:8082
      - INVENTORY_URL=inventory:50051
      - ADDRESS_URL=http://address:8084
      - NATS_URL=nats://nats:4222
      - OTEL_EXPORTER_OTLP_ENDPOINT=nats://nats:4222
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_SERVICE_NAME=order-service
    command:
      [
        "./order-service",
        "-http.addr=:8081",
        "-payment.url=http://payment:8082",
        "-inventory.url=inventory:50051",
        "-address.url=http://address:8084",
        "-nats.url=nats://nats:4222",
      ]

  # Update payment service to use NATS
  payment:
    build:
      context: .
      dockerfile: payment/Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - nats
    environment:
      - NATS_URL=nats://nats:4222
      - OTEL_EXPORTER_OTLP_ENDPOINT=nats://nats:4222
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_SERVICE_NAME=payment-service
    command: ["./payment-service", "-http.addr=:8082", "-nats.url=nats://nats:4222"]

  # Update inventory service to use NATS
  inventory:
    build:
      context: .
      dockerfile: inventory/Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - nats
    environment:
      - NATS_URL=nats://nats:4222
      - OTEL_EXPORTER_OTLP_ENDPOINT=nats://nats:4222
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_SERVICE_NAME=inventory-service
    command:
      [
        "./inventory-service",
        "-http.addr=:8083",
        "-grpc.addr=:50051",
        "-nats.url=nats://nats:4222",
      ]

  # Update address service to use NATS
  address:
    build:
      context: .
      dockerfile: address/Dockerfile
    ports:
      - "8084:8084"
    depends_on:
      - nats
    environment:
      - NATS_URL=nats://nats:4222
      - OTEL_EXPORTER_OTLP_ENDPOINT=nats://nats:4222
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_SERVICE_NAME=address-service
    command: ["./address-service", "-http.addr=:8084", "-nats.url=nats://nats:4222"]

  # NATS service configuration
  nats:
    image: nats:latest
    ports:
      - "4222:4222"
      - "8222:8222"
    command: ["--jetstream"]

  # Keep the rest of the services unchanged
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - ./elasticsearch-data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  logstash:
    build:
      context: ./logstash
      dockerfile: Dockerfile
    container_name: logstash
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
    ports:
      - "5044:5044"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch
      - nats
